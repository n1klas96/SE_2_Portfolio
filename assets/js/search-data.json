{
  
    
        "post0": {
            "title": "Design und Data Science Architektur",
            "content": "Modellierte Requirements von Frunch Infinity . . . Veränderung der Requirements im Projektverlauf . In Stage 1 unseres Projektes haben wir die Requirements nach den Sophisten Regeln grundlegend festgelegt und auf Basis jener wurden die ersten, erforderlichen Entwicklungsschritte durchgeführt: . erstellung eines dev-containers | Aufbau einer preprocessing Pipeline | Aufbau einer CI/CD Pipeline | Unit-Tests für Pipelines | erste Version der Streamlit Applikation | Modellentwicklung mit PyCaret | . Nachdem die ersten Entwicklungsschritte von Stage 1 abgeschlossen waren, haben wir in unserem Sprint-Review einen neuen Requirement-Zyklus eingeleitet und die einzelnen Requirements neu priorisiert. Zunächst hat sich gezeigt das das Requirement: “Wenn der Turbofan-Datensatz in die Streamlit-Applikation importiert wurde, muss die Applikation alle Variablen und Werte des Datensatzes erkennen” nach unseren ersten Entwicklungserkenntnissen nicht ganz passend für unsere MVP-Software einer Auto-ML ist. Der Import von einem oder verschiedenen Datensätzen erschwert die Entwicklung eines ersten, funktionierenden Produkts enorm. Die Wichtigkeit unserer Requirements wurde also in diesem Zyklus angepasst auf zunächst einen Datensatz (Turbofan) und Regressions-Algorithmen priorisiert. . Nach jedem größeren Entwicklungsschritt bzw. in jedem Sprint-Review sollten die aufgestellten Requirements auf konsistenz und Vollständigkeit geprüft werden, da auf Veränderungen innerhalb der Requirements nur angemessen reagiert werden kann, wenn diese bekannt sind. .",
            "url": "https://n1klas96.github.io/SE_2_Portfolio/markdown/2022/06/24/06design.html",
            "relUrl": "/markdown/2022/06/24/06design.html",
            "date": " • Jun 24, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Architektur",
            "content": "Modellierte Requirements von Frunch Infinity . .",
            "url": "https://n1klas96.github.io/SE_2_Portfolio/markdown/2022/06/24/05architektur.html",
            "relUrl": "/markdown/2022/06/24/05architektur.html",
            "date": " • Jun 24, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Web - Technologien",
            "content": "Modellierte Requirements von Frunch Infinity . . . Veränderung der Requirements im Projektverlauf . In Stage 1 unseres Projektes haben wir die Requirements nach den Sophisten Regeln grundlegend festgelegt und auf Basis jener wurden die ersten, erforderlichen Entwicklungsschritte durchgeführt: . erstellung eines dev-containers | Aufbau einer preprocessing Pipeline | Aufbau einer CI/CD Pipeline | Unit-Tests für Pipelines | erste Version der Streamlit Applikation | Modellentwicklung mit PyCaret | . Nachdem die ersten Entwicklungsschritte von Stage 1 abgeschlossen waren, haben wir in unserem Sprint-Review einen neuen Requirement-Zyklus eingeleitet und die einzelnen Requirements neu priorisiert. Zunächst hat sich gezeigt das das Requirement: “Wenn der Turbofan-Datensatz in die Streamlit-Applikation importiert wurde, muss die Applikation alle Variablen und Werte des Datensatzes erkennen” nach unseren ersten Entwicklungserkenntnissen nicht ganz passend für unsere MVP-Software einer Auto-ML ist. Der Import von einem oder verschiedenen Datensätzen erschwert die Entwicklung eines ersten, funktionierenden Produkts enorm. Die Wichtigkeit unserer Requirements wurde also in diesem Zyklus angepasst auf zunächst einen Datensatz (Turbofan) und Regressions-Algorithmen priorisiert. . Nach jedem größeren Entwicklungsschritt bzw. in jedem Sprint-Review sollten die aufgestellten Requirements auf konsistenz und Vollständigkeit geprüft werden, da auf Veränderungen innerhalb der Requirements nur angemessen reagiert werden kann, wenn diese bekannt sind. .",
            "url": "https://n1klas96.github.io/SE_2_Portfolio/markdown/2022/06/24/04web-technologien.html",
            "relUrl": "/markdown/2022/06/24/04web-technologien.html",
            "date": " • Jun 24, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Diagramme",
            "content": "Modellierte Requirements von Frunch Infinity . .",
            "url": "https://n1klas96.github.io/SE_2_Portfolio/markdown/2022/06/24/03Digramme.html",
            "relUrl": "/markdown/2022/06/24/03Digramme.html",
            "date": " • Jun 24, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Data Science Methodik-Konzept - Beschreibung",
            "content": ". Abbildung des Datenflusses . . . Beschreibung . In Stage 1 unseres Projektes haben wir die Requirements nach den Sophisten Regeln grundlegend festgelegt und auf Basis jener wurden die ersten, erforderlichen Entwicklungsschritte durchgeführt: . erstellung eines dev-containers | Aufbau einer preprocessing Pipeline | Aufbau einer CI/CD Pipeline | Unit-Tests für Pipelines | erste Version der Streamlit Applikation | Modellentwicklung mit PyCaret | . Nachdem die ersten Entwicklungsschritte von Stage 1 abgeschlossen waren, haben wir in unserem Sprint-Review einen neuen Requirement-Zyklus eingeleitet und die einzelnen Requirements neu priorisiert. Zunächst hat sich gezeigt das das Requirement: “Wenn der Turbofan-Datensatz in die Streamlit-Applikation importiert wurde, muss die Applikation alle Variablen und Werte des Datensatzes erkennen” nach unseren ersten Entwicklungserkenntnissen nicht ganz passend für unsere MVP-Software einer Auto-ML ist. Der Import von einem oder verschiedenen Datensätzen erschwert die Entwicklung eines ersten, funktionierenden Produkts enorm. Die Wichtigkeit unserer Requirements wurde also in diesem Zyklus angepasst auf zunächst einen Datensatz (Turbofan) und Regressions-Algorithmen priorisiert. . Nach jedem größeren Entwicklungsschritt bzw. in jedem Sprint-Review sollten die aufgestellten Requirements auf konsistenz und Vollständigkeit geprüft werden, da auf Veränderungen innerhalb der Requirements nur angemessen reagiert werden kann, wenn diese bekannt sind. .",
            "url": "https://n1klas96.github.io/SE_2_Portfolio/markdown/2022/06/24/02methodik-konzept.html",
            "relUrl": "/markdown/2022/06/24/02methodik-konzept.html",
            "date": " • Jun 24, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Modellierte Anforderungen (Requirements)",
            "content": "Modellierte Requirements von Frunch Infinity . . . Veränderung der Requirements im Projektverlauf . In Stage 1 unseres Projektes haben wir die Requirements nach den Sophisten Regeln grundlegend festgelegt und auf Basis jener wurden die ersten, erforderlichen Entwicklungsschritte durchgeführt: . erstellung eines dev-containers | Aufbau einer preprocessing Pipeline | Aufbau einer CI/CD Pipeline | Unit-Tests für Pipelines | erste Version der Streamlit Applikation | Modellentwicklung mit PyCaret | . Nachdem die ersten Entwicklungsschritte von Stage 1 abgeschlossen waren, haben wir in unserem Sprint-Review einen neuen Requirement-Zyklus eingeleitet und die einzelnen Requirements neu priorisiert. Zunächst hat sich gezeigt das das Requirement: “Wenn der Turbofan-Datensatz in die Streamlit-Applikation importiert wurde, muss die Applikation alle Variablen und Werte des Datensatzes erkennen” nach unseren ersten Entwicklungserkenntnissen nicht ganz passend für unsere MVP-Software einer Auto-ML ist. Der Import von einem oder verschiedenen Datensätzen erschwert die Entwicklung eines ersten, funktionierenden Produkts enorm. Die Wichtigkeit unserer Requirements wurde also in diesem Zyklus angepasst auf zunächst einen Datensatz (Turbofan) und Regressions-Algorithmen priorisiert. . Nach jedem größeren Entwicklungsschritt bzw. in jedem Sprint-Review sollten die aufgestellten Requirements auf konsistenz und Vollständigkeit geprüft werden, da auf Veränderungen innerhalb der Requirements nur angemessen reagiert werden kann, wenn diese bekannt sind. .",
            "url": "https://n1klas96.github.io/SE_2_Portfolio/markdown/2022/06/24/01Requirements-Engineering.html",
            "relUrl": "/markdown/2022/06/24/01Requirements-Engineering.html",
            "date": " • Jun 24, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://n1klas96.github.io/SE_2_Portfolio/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://n1klas96.github.io/SE_2_Portfolio/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}